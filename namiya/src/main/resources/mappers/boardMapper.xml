<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="global.sesoc.namiya.dao.BoardMapper">
	<insert id="insertBrd" parameterType="Board">
		insert into board (boardnum, productnum, userid, regdate, title, content, service
		<if test="originalfile != null and savedfile != null">
		, originalfile, savedfile</if>) 
		values (boardnum_seq.nextval, #{productnum}, #{userid}, sysdate, #{title}, #{content}, #{service}
		<if test="originalfile != null and savedfile != null">
		, #{originalfile}, #{savedfile}
		</if>)
	</insert>
	
	
	<select id="selectList" resultType="map" parameterType="map">
		select b.boardnum, b.productnum, b.userid, to_char(b.regdate, 'YYYY-MM-DD') regdate, b.title, b.content, b.service, b.originalfile, b.savedfile, p.sstatus from board b, product p where b.productnum = p.productnum and service=#{service} and userid=#{userid} order by boardnum desc
	</select>
	
	
	<select id="selectOne" resultType="Board" parameterType="Integer">
		select boardnum, productnum, userid, to_char(regdate,'YYYY-MM-DD') regdate, title, content, service, originalfile, savedfile from board where boardnum=#{boardnum}
	</select>
	
	
	<select id="getTotalPage" parameterType="map" resultType="Integer">
		select count(*) from board where service=#{service} and userid=#{userid}
	</select>
	
	<delete id="deleteOne" parameterType="Integer">
		delete board where boardnum=#{boardnum}
	</delete>
	
	<update id="boardUpdate" parameterType="Board">
		update board set title = #{title}, content=#{content}, originalfile=#{originalfile}, savedfile=#{savedfile} where boardnum=#{boardnum}	
	</update>
	
	<select id="selectMember" parameterType="String" resultType="Members">
		select userid, password, username, birthday, gender, email, phoneno, fulladdr, zipcode, myurl from members
	</select>
	
	<select id="selectItr" parameterType="map" resultType="Interest">
		select interestnum, userid, boardnum from interest where userid=#{userid} and boardnum=#{boardnum}
	</select>
	
	<insert id="insertItr" parameterType="Interest">
		insert into interest (interestnum, userid, boardnum) values(interestnum_seq.nextval, #{userid}, #{boardnum})
	</insert>
	
	<insert id="insertHst" parameterType="History">
		insert into history (historynum, productnum, sellerid) values(historynum_seq.nextval, #{productnum}, #{sellerid})
	</insert>
	
	<select id="selectWish" parameterType="map" resultType="Wish">
		select wishnum, boardnum, userid from wish where userid=#{userid} and boardnum=#{boardnum}
	</select>
	
	<insert id="insertWish" parameterType="Wish">
		insert into wish (wishnum, boardnum, userid) values (wishnum_seq.nextval, #{boardnum}, #{userid})
	</insert>
	
	<select id="selectWishAll" resultType="Wish">
		select wishnum, boardnum, userid from wish where boardnum=#{boardnum}
	</select>
	
	<select id="selectHst" parameterType="Integer" resultType="History">
		select historynum, productnum, sellerid, buyerid, to_char(deal_start, 'YYYY-MM-DD') deal_start, to_char(deal_end, 'YYYY-MM-DD') deal_end from history where historynum=#{historynum}
	</select>
	
	<select id="selectBoard" parameterType="Integer" resultType="Board">
		select boardnum, productnum, userid, to_char(regdate,'YYYY-MM-DD') regdate, title, content, service, originalfile, savedfile from board where productnum=#{productnum}
	</select>
	
	<insert id="insertMsg" parameterType="Message">
		insert into message (messagenum, writerid, msg_title, msg_content, regdate, userid, copy) values (messagenum_seq.nextval, #{writerid}, #{msg_title}, #{msg_content}, sysdate, #{userid}, #{copy})
	</insert>
	
	<select id="selectHstone" parameterType="Integer" resultType="History">
		select historynum, productnum, sellerid, buyerid, to_char(deal_start, 'YYYY-MM-DD') deal_start, to_char(deal_end, 'YYYY-MM-DD') deal_end from history where productnum=#{productnum}
	</select>
	
	
	<update id="updateHst" parameterType="History">
		update history set deal_start=to_date(#{deal_start},'YYYY-MM-DD'), deal_end=to_date(#{deal_end}, 'YYYY-MM-DD') where historynum=#{historynum}
	</update>
	
	
	<update id="updateBuyer" parameterType="History">
		update history set buyerid=#{buyerid} where historynum=#{historynum}
	</update>
	
	<select id="reviewgetTotalPage" parameterType="String" resultType="Integer">
		select count(*) from board where userid=#{userid}
	</select>
</mapper>
